<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">


    <!--加载c3p0.properties的文件内容，里面的key明明要有一定的特殊规则-->
    <context:property-placeholder location="classpath:config/c3p0.properties"/>
          <!--数据源-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${c3p0.driverClass}"></property>
        <property name="jdbcUrl" value="${c3p0.jdbcUrl}"></property>
        <property name="user" value="${c3p0.user}"></property>
        <property name="password" value="${c3p0.password}"></property>

        <!--初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。Default: 3-->
        <property name="initialPoolSize" value="3" />
        <!--连接池中保留的最小连接数。 -->
        <property name="minPoolSize" value="3" />
        <!--连接池中保留的最大连接数。Default: 15 -->
        <property name="maxPoolSize" value="300" />
        <!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
        <property name="maxIdleTime" value="60" />
        <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
        <property name="acquireIncrement" value="5" />
        <!--每60秒检查所有连接池中的空闲连接。Default: 0 -->
        <property name="idleConnectionTestPeriod" value="60" />
    </bean>

    <!--mybatis的sqlSessionFactory配置-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 加载mybatis配置文件-->
        <property name="configLocation" value="classpath:config/mybatis/SqlMapConfig.xml"></property>
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--mapper配置，实现类在mybatis-spring整合包中
         根据mapper接口生成代理对象,查看源码看需要哪些属性,-->
    <!--<bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">-->
        <!--<property name="mapperInterface" value="cn.yanke.ssm.mapper.UserMapper"></property>-->
        <!--<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>-->
    <!--</bean>-->


    <!--mapper批量扫描：从mapper包中扫描mapper接口，自动创建代理对象，并在spring容器中注册-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--指定扫描的包名 映射名称一致且在同一个目录下 ,自动扫描出来的mapper的bean的id为mapper类名（首字母小写）
             扫描多个包，不能用通配符，用半角逗号分隔-->
        <property name="basePackage" value="cn.yanke.ssm.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
            <!--这里value 不能是ref，源码中sqlSessionFactoryBeanName为String类型-->
    </bean>

</beans>